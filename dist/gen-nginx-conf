#!/bin/bash

SCRIPT=`realpath $0`
DIR=`dirname $SCRIPT`
DATADIR=`dirname $DIR`
EXTRA_CONF_FILE=$DATADIR/nginx.conf
SOCKETPATH=$DATADIR/nginx.sock
CERTPATH=$DATADIR/letsencrypt/certs/$COMMONNAME/fullchain.pem
KEYPATH=$DATADIR/letsencrypt/certs/$COMMONNAME/privkey.pem
SSL_CONF=""
EXTRA_CONF=""

# Parse Arguments
OPTIND=1
while getopts "?h:su:" opt; do
	case "$opt" in
		h)
			COMMONNAME=$OPTARG
			;;
		s)
			SSL_CONF="`cat $DIR/ssl.conf`"
			;;
		d)
			DATADIR=$OPTARG
			;;
		e)
			EXTRA_CONF_FILE=$OPTARG
			;;
		*)
			echo "Usage: $0 -h [common_name] -d [data_dir] -e [extra_conf_file] {domains_list} -s ssl?"
			exit
			;;
	esac
done  	
shift "$((OPTIND-1))"
DOMAINS=$@

[[ -z $COMMONNAME ]] && echo "-h [common_name] is missing" && exit

# Add domains to ssl
echo "$COMMONNAME $DOMAINS" | sudo tee $DATADIR/letsencrypt/domains.txt

# Extra configuration
if [ -f $EXTRA_CONF_FILE ] ; then
	EXTRA_CONF="`cat $EXTRA_CONF_FILE`" 
fi;

# Generate Nginx Configuration File
NGINX_CONF_FILE=/etc/nginx/sites-enabled/$COMMONNAME.conf

render() {
  eval "echo \"$(cat $1|sed 's/\$/@#@/g;s/\%/\$/g')\"" | sed 's/@#@/\$/g'
}
render $DIR/nginx.conf > $DIR/nginx.tmp
render $DIR/nginx.tmp | sudo cat > $NGINX_CONF_FILE

# Reload nginx
echo "Reload Nginx.."
sudo nginx -s reload